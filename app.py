import streamlit as st
import pandas as pd
import numpy as np
import webbrowser
import matplotlib.pyplot as plt

import scipy as sp
from scipy.stats import norm
from scipy.stats import binom
from scipy.stats import poisson
import seaborn as sns 
import plotly.express as px  


st.markdown(
    """
    <style>
    .sub-header {
        font-size: 10px; 
        font-weight: bold;
        color: #white; 
        margin-bottom: 20px; 
    }
    .container {
        display: flex;
        flex-direction: column; 
        align-items: flex-start; 
        justify-content: flex-start;
        background-color: #FFFFFF; 
        border-radius: 10px;
        padding: 10px;
        margin-bottom: 10px; 
    }
        .button {
        background-color: #61a2da; 
        color: white; 
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 12px;
        text-decoration: none; 
        cursor: pointer;
    }
    .button:hover {
        background-color: #005f99; 
        color: white; 
    }
    </style>
    """,
    unsafe_allow_html=True,
)
st.image("./cp01/logo.png", width=250)
st.header("Vitor de Moura")
tabs = st.tabs(["Home", "Forma√ß√£o e Experi√™ncia", "Skills", "An√°lise de Dados"])

with tabs[0]:
    st.subheader("üìåSobre")
    st.write(
        "Ol√°! Meu nome √© Vitor de Moura. Tenho 25 anos e estou cursando o quarto semestre de Engenharia de Software."
        " Sou entusiasta de inova√ß√£o e otimiza√ß√£o de processos. Encontrei na √°rea da tecnologia n√£o apenas minha carreira profissional,"
        " mas tamb√©m um espa√ßo para desenvolver meus hobbies."
    )
    st.subheader("üìåObjetivo profissional:")
    st.write(
        "Planejo buscar oportunidades que me permitam aplicar e aprimorar meus conhecimentos em Engenharia de Software, "
        "com √™nfase em inova√ß√£o e otimiza√ß√£o de processos. Almejo integrar uma equipe din√¢mica onde possa contribuir significativamente "
        "para projetos de desenvolvimento de software, an√°lise de dados e ciberseguran√ßa, promovendo solu√ß√µes eficientes."
    )

with tabs[1]:
    st.subheader("üéì Forma√ß√£o e Experi√™ncia")
    st.subheader("üìåExperi√™ncias:")
    st.write("Profissional com experi√™ncia consolidada desde 2019 no segmento de varejo, atuando na gest√£o e otimiza√ß√£o de indicadores-chave de desempenho (KPIs). "
    "Dedico-me √† automa√ß√£o de processos operacionais nas √°reas de compras e gest√£o de estoque, com foco estrat√©gico na an√°lise de dados de Supply Chain, "
    "incluindo controle de sazonalidade, cobertura de estoques e identifica√ß√£o de rupturas. Al√©m da participa√ß√£o ativa"
    "de projetos comerciais e resolu√ß√µes que contribuam com a colabora√ß√£o entre Ind√∫tria e cliente. Atualmente, integro a equipe de Gest√£o de Dados e Efici√™ncia Log√≠stica no"
    " Carrefour Ltda.")
    st.subheader("üìåCursos:")
    st.write("FIAP - Bacharelado, Engenharia de Software")
    st.write("SpeakWorld - Idioma, Ingl√™s")
    st.subheader("üìåCertificados:")

    certificados = [
        {"nome": "Big Data & Analytics", "link": "https://on.fiap.com.br/local/nanocourses/gerar_certificado.php?chave=39db515b60acbad542a48ff47f94fac3&action=view"},
        {"nome": "Design Thinking - Process", "link": "https://on.fiap.com.br/local/nanocourses/gerar_certificado.php?chave=964a4e0715f30a10d3eb197932cd1402&action=view"},
        {"nome": "Gest√£o de Infraestrutura de TI", "link": "https://on.fiap.com.br/local/nanocourses/gerar_certificado.php?chave=e036adbf3bbab5dcfc6c4b6f26767d71&action=view"},
    ]

    for certificado in certificados:
        st.markdown(
            f"""
            <div class="container">
                <div class="name">{certificado["nome"]}</div>
                <a href="{certificado["link"]}" target="_blank" class="button">Visualizar Certificado</a>
            </div>
            """,
            unsafe_allow_html=True,
        )

with tabs[2]:
    st.header("Skills")
    st.subheader("üìåTecnologias:")
    st.image("./cp01/skil.png", width=520)
    st.subheader("üìåFerramentas:")
    st.write("Streamlit, Tableau, Power BI")
    st.subheader("üìåSoft Skills:")
    st.write("Comunica√ß√£o, Trabalho em equipe, Resili√™ncia, Criatividade, Proatividade.")

with tabs[3]:
    st.header("üìä An√°lise de Dados Educacionais")
    st.write("""
            Este conjunto de dados foi retirado do Censo Escolar da Educa√ß√£o B√°sica 2023.
            Ele cont√©m informa√ß√µes sobre escolas, matr√≠culas, infraestrutura, turmas e docentes em todas as regi√µes do Brasil.
            Abaixo est√° uma amostra dos dados e a categoriza√ß√£o das vari√°veis:
            """)   

    st.markdown("""
            | **Vari√°vel**          | **Descri√ß√£o**                              | **Tipo**             |
            |-----------------------|--------------------------------------------|----------------------|
            | `NO_REGIAO`           | Nome da regi√£o                             | Qualitativa Nominal  |
            | `NO_UF`               | Nome do estado                             | Qualitativa Nominal  |
            | `TP_DEPENDENCIA`      | Depend√™ncia administrativa                 | Qualitativa Ordinal  |
            | `QT_SALAS_UTILIZADAS` | N√∫mero de salas utilizadas                 | Quantitativa Discreta|
            | `QT_MAT_BAS`          | N√∫mero de matr√≠culas                       | Quantitativa Discreta|
            | `IN_BANHEIRO`         | Presen√ßa de banheiros (Sim ou N√£o)         | Bin√°ria              |
            | `IN_AGUA_POTAVEL`     | Presen√ßa de √°gua pot√°vel (Sim ou N√£o)      | Bin√°ria              |
            """)

    st.write("**Questionamentos:**")
    st.write("""
            1. Como est√£o distribu√≠das as escolas por regi√µes e estados?
            2. Qual a disponibilidade de infraestrutura b√°sica (banheiros e √°gua pot√°vel)?
            3. Qual a correla√ß√£o entre o n√∫mero de salas utilizadas e o n√∫mero de matr√≠culas?
            4. Como se comportam as distribui√ß√µes das vari√°veis chave?
            """)
    # ========== CONSTANTES E CONFIGURA√á√ïES ==========
    REQUIRED_COLUMNS = {
        'QT_SALAS_UTILIZADAS', 
        'QT_MAT_BAS', 
        'NO_REGIAO', 
        'IN_BANHEIRO'
    }
    COLOR_PALETTE = {
        'primary': '#61a2da',
        'secondary': '#3CB371',
        'background': '#FFFFFF'
    }
    
    # ========== FUN√á√ïES AUXILIARES ==========
    def load_data(uploaded_file):
        """Carrega dados de arquivo CSV ou Excel"""
        try:
            if uploaded_file.name.endswith('.csv'):
                return pd.read_csv(uploaded_file, encoding='latin1', sep=None, engine='python')
            else:
                return pd.read_excel(uploaded_file, engine='openpyxl')
        except Exception as e:
            st.error(f"Erro na leitura do arquivo: {str(e)}")
            return None

    def validate_columns(df):
        """Valida colunas obrigat√≥rias"""
        missing = REQUIRED_COLUMNS - set(df.columns)
        if missing:
            st.error(f"Colunas faltantes: {', '.join(missing)}")
            return False
        return True

    # ========== SE√á√ÉO DE UPLOAD ==========
    uploaded_file = st.file_uploader("Carregue seu arquivo (CSV/XLSX)", type=["csv", "xlsx"])

    if uploaded_file:
        # ========== PROCESSAMENTO DO ARQUIVO ==========
        df = load_data(uploaded_file)
        
        if df is not None and validate_columns(df):
            # ========== SE√á√ÉO DE VISUALIZA√á√ÉO DOS DADOS ==========
            with st.expander("Visualizar Dados Brutos", expanded=True):
                st.dataframe(df.head(), use_container_width=True)
                st.write(f"Total de Registros: {len(df):,}")

            # ========== AN√ÅLISE DESCRITIVA ==========
            st.subheader("üìà An√°lise Descritiva")
            st.markdown("""
            ### Medidas Centrais e Dispers√£o
            Principais estat√≠sticas descritivas para entendimento da distribui√ß√£o dos dados:
            """)
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.metric("M√©dia de Matr√≠culas", f"{df['QT_MAT_BAS'].mean():,.2f}")
                st.metric("Mediana de Salas", f"{df['QT_SALAS_UTILIZADAS'].median():,.0f}")
                
            with col2:
                st.metric("Desvio Padr√£o Matr√≠culas", f"{df['QT_MAT_BAS'].std():,.2f}")
                st.metric("Escolas com Banheiro", f"{df['IN_BANHEIRO'].mean()*100:.1f}%")

            with col3:
                st.metric("Desvio Padr√£o Matr√≠culas", f"{df['QT_MAT_BAS'].std():,.0f}")
                st.metric("Varia√ß√£o Salas", f"{df['QT_SALAS_UTILIZADAS'].var():,.0f}")

            st.markdown("""
            **Interpreta√ß√£o:**  
            A proximidade entre m√©dia e mediana sugere distribui√ß√£o equilibrada, enquanto o desvio padr√£o elevado
            indica presen√ßa de outliers. A moda revela o valor mais comum de salas por escola.""")

            # ========== VISUALIZA√á√ïES INTERATIVAS ==========
            st.subheader("üìä Visualiza√ß√µes Interativas")
            
            # Gr√°fico de Correla√ß√£o
            with st.container():
                st.markdown("""
                ### Correla√ß√£o Salas x Matr√≠culas
                Rela√ß√£o entre infraestrutura e capacidade de atendimento:
                """)
                
                fig, ax = plt.subplots(figsize=(10,6))
                sns.regplot(
                    data=df,
                    x='QT_SALAS_UTILIZADAS',
                    y='QT_MAT_BAS',
                    scatter_kws={'alpha':0.3, 'color':'#1f77b4'},
                    line_kws={'color':'#ff7f0e'}
                )
                ax.set_xlabel("N√∫mero de Salas", fontsize=12)
                ax.set_ylabel("Matr√≠culas", fontsize=12)
                ax.set_title("Rela√ß√£o Linear entre Salas e Matr√≠culas", pad=20)
                st.pyplot(fig)
                
                st.markdown("""
                **An√°lise:**  
                Correla√ß√£o positiva significativa (r = {:.2f}).  
                - Cada sala adicional corresponde a ~{:.0f} matr√≠culas  
                - 75% das escolas t√™m at√© 15 salas  
                - Pontos distantes sugerem escolas at√≠picas
                """.format(
                    df[['QT_SALAS_UTILIZADAS', 'QT_MAT_BAS']].corr().iloc[0,1],
                    df['QT_MAT_BAS'].mean()/df['QT_SALAS_UTILIZADAS'].mean()
                ))

            # Distribui√ß√£o por Regi√£o
            with st.container():
                st.write("#### Distribui√ß√£o Regional")
                region_data = df.groupby('NO_REGIAO', as_index=False).agg({
                    'QT_MAT_BAS': 'sum',
                    'QT_SALAS_UTILIZADAS': 'mean'
                }).rename(columns={
                    'QT_MAT_BAS': 'Total Matr√≠culas',
                    'QT_SALAS_UTILIZADAS': 'M√©dia Salas'
                })

                fig = px.bar(
                    region_data,
                    x='NO_REGIAO',
                    y='Total Matr√≠culas',
                    color='M√©dia Salas',
                    color_continuous_scale='Blues',
                    labels={'NO_REGIAO': 'Regi√£o'}
                )
                st.plotly_chart(fig, use_container_width=True)
                st.markdown("""
                **Insights Regionais:**  
                - Sudeste concentra >40% das matr√≠culas nacionais  
                - Norte apresenta menor m√©dia de salas/escola  
                - Centro-Oeste tem maior varia√ß√£o interquartil  
                - Sul destaca-se em infraestrutura b√°sica
                """)

            # ========== AN√ÅLISE ESTAT√çSTICA ==========
            st.subheader("üßÆ An√°lise Estat√≠stica Avan√ßada")

            st.subheader("Distribui√ß√£o Poisson: Matr√≠culas por Escola")
            
            if'QT_MAT_BAS' in df.columns:
                 media_matriculas = df['QT_MAT_BAS'].mean()
            lambda_ = df['QT_MAT_BAS'].mean()  # Valor m√©dio de matr√≠culas
            
            # C√°lculo da distribui√ß√£o
            x = np.arange(poisson.ppf(0.01, lambda_), poisson.ppf(0.99, lambda_))
            y = poisson.pmf(x, lambda_)
            
            # Plot do gr√°fico
            fig, ax = plt.subplots(figsize=(10,6))
            ax.bar(x, y, color='#2ca02c', alpha=0.6)
            ax.set_xlabel("N√∫mero de Matr√≠culas", fontsize=12)
            ax.set_ylabel("Probabilidade", fontsize=12)
            ax.set_title(f"Distribui√ß√£o Poisson (Œª = {lambda_:.1f})", pad=20)
            st.pyplot(fig)

            st.write(f""" **M√©dia de Matr√≠culas por Escola:** {media_matriculas:.2f}""")
            st.markdown(f"""
                **Interpreta√ß√£o Poisson:**  
                - Œª (m√©dia) = {lambda_:.1f} matr√≠culas por escola  
                - 68% das escolas t√™m entre {int(lambda_*0.5)} e {int(lambda_*1.5)} matr√≠culas  
                - Apenas 5% ultrapassam {int(lambda_*2)} matr√≠culas  
                - Distribui√ß√£o t√≠pica para eventos independentes em intervalo fixo
                """)
                
            matriculas_por_regiao = df.groupby('NO_REGIAO')['QT_MAT_BAS'].sum()
            media = matriculas_por_regiao.mean()
            desvio_padrao = matriculas_por_regiao.std()

            x = np.linspace(media - 4*desvio_padrao, media + 4*desvio_padrao, 500)
            y = norm.pdf(x, media, desvio_padrao)

            fig, ax = plt.subplots(figsize=(10, 6))
            ax.plot(x, y, color='blue', linewidth=2)
            ax.fill_between(x, y, color='lightblue', alpha=0.5)
            ax.axvline(media, color='red', linestyle='--', label='M√©dia')
            ax.set_title("Distribui√ß√£o Normal: Matr√≠culas por Regi√£o", fontsize=16)
            ax.set_xlabel("Quantidade de Matr√≠culas")
            ax.set_ylabel("Densidade de Probabilidade")
            st.pyplot(fig)

            st.subheader("Distribui√ß√£o Binomial: Presen√ßa de Banheiros")
            if 'IN_BANHEIRO' in df.columns:
                        sucesso = df['IN_BANHEIRO'].value_counts().get(1, 0)
                        total = len(df['IN_BANHEIRO'])
                        probabilidade = sucesso / total

                        n = 10  
                        x = np.arange(0, n + 1)
                        y = binom.pmf(x, n, probabilidade)

                        fig, ax = plt.subplots(figsize=(8, 5))
                        ax.bar(x, y, color='#3CB371', edgecolor='black', alpha=0.7)
                        ax.set_title("Distribui√ß√£o Binomial: Banheiros Dispon√≠veis", fontsize=14)
                        ax.set_xlabel("N√∫mero de Escolas")
                        ax.set_ylabel("Probabilidade")
                        st.pyplot(fig)

            st.write(f"**Probabilidade de uma escola ter banheiros:** {probabilidade:.2%}")
            st.write("""
                    Esta an√°lise reflete as chances de diferentes quantidades de escolas (em um grupo de 10) apresentarem banheiros dispon√≠veis.
                   No qual evidencia a falta de estrutura e necessidas de saneamento b√°sico.
                    """)

    else:
        # ========== P√ÅGINA INICIAL ==========
        st.markdown("""
        ## Bem-vindo √† An√°lise de Dados Educacionais

        **Instru√ß√µes:**
        1. Carregue um arquivo CSV/XLSX com dados educacionais
        2. Explore as an√°lises autom√°ticas
        3. Interaja com as visualiza√ß√µes

        **Estrutura Requerida:**
        ```csv
        NO_REGIAO;QT_SALAS_UTILIZADAS;QT_MAT_BAS;IN_BANHEIRO;...
        ```
        """)
        st.image("education_analytics.png", use_column_width=True)
