import streamlit as st
import pandas as pd
import numpy as np
import webbrowser
import matplotlib.pyplot as plt
import scipy as sp
from scipy.stats import norm
from scipy.stats import binom
from scipy.stats import poisson


st.markdown(
    """
    <style>
    .sub-header {
        font-size: 10px; 
        font-weight: bold;
        color: #white; 
        margin-bottom: 20px; 
    }
    .container {
        display: flex;
        flex-direction: column; 
        align-items: flex-start; 
        justify-content: flex-start;
        background-color: #FFFFFF; 
        border-radius: 10px;
        padding: 10px;
        margin-bottom: 10px; 
    }
        .button {
        background-color: #61a2da; 
        color: white; 
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 12px;
        text-decoration: none; 
        cursor: pointer;
    }
    .button:hover {
        background-color: #005f99; 
        color: white; 
    }
    </style>
    """,
    unsafe_allow_html=True,
)
st.image("./cp01/logo.png", width=250)
st.header("Vitor de Moura")
tabs = st.tabs(["Home", "Forma√ß√£o e Experi√™ncia", "Skills", "An√°lise de Dados"])

with tabs[0]:
    st.subheader("üìåSobre")
    st.write(
        "Ol√°! Meu nome √© Vitor de Moura. Tenho 25 anos e estou cursando o quarto semestre de Engenharia de Software."
        " Sou entusiasta de inova√ß√£o e otimiza√ß√£o de processos. Encontrei na √°rea da tecnologia n√£o apenas minha carreira profissional,"
        " mas tamb√©m um espa√ßo para desenvolver meus hobbies."
    )
    st.subheader("üìåObjetivo profissional:")
    st.write(
        "Planejo buscar oportunidades que me permitam aplicar e aprimorar meus conhecimentos em Engenharia de Software, "
        "com √™nfase em inova√ß√£o e otimiza√ß√£o de processos. Almejo integrar uma equipe din√¢mica onde possa contribuir significativamente "
        "para projetos de desenvolvimento de software, an√°lise de dados e ciberseguran√ßa, promovendo solu√ß√µes eficientes."
    )

with tabs[1]:
    st.subheader("üéì Forma√ß√£o e Experi√™ncia")
    st.subheader("üìåExperi√™ncias:")
    st.write("Profissional com experi√™ncia consolidada desde 2019 no segmento de varejo, atuando na gest√£o e otimiza√ß√£o de indicadores-chave de desempenho (KPIs). "
    "Dedico-me √† automa√ß√£o de processos operacionais nas √°reas de compras e gest√£o de estoque, com foco estrat√©gico na an√°lise de dados de Supply Chain, "
    "incluindo controle de sazonalidade, cobertura de estoques e identifica√ß√£o de rupturas. Al√©m da participa√ß√£o ativa"
    "de projetos comerciais e resolu√ß√µes que contribuam com a colabora√ß√£o entre Ind√∫tria e cliente. Atualmente, integro a equipe de Gest√£o de Dados e Efici√™ncia Log√≠stica no"
    " Carrefour Ltda.")
    st.subheader("üìåCursos:")
    st.write("FIAP - Bacharelado, Engenharia de Software")
    st.write("SpeakWorld - Idioma, Ingl√™s")
    st.subheader("üìåCertificados:")

    certificados = [
        {"nome": "Big Data & Analytics", "link": "https://on.fiap.com.br/local/nanocourses/gerar_certificado.php?chave=39db515b60acbad542a48ff47f94fac3&action=view"},
        {"nome": "Design Thinking - Process", "link": "https://on.fiap.com.br/local/nanocourses/gerar_certificado.php?chave=964a4e0715f30a10d3eb197932cd1402&action=view"},
        {"nome": "Gest√£o de Infraestrutura de TI", "link": "https://on.fiap.com.br/local/nanocourses/gerar_certificado.php?chave=e036adbf3bbab5dcfc6c4b6f26767d71&action=view"},
    ]

    for certificado in certificados:
        st.markdown(
            f"""
            <div class="container">
                <div class="name">{certificado["nome"]}</div>
                <a href="{certificado["link"]}" target="_blank" class="button">Visualizar Certificado</a>
            </div>
            """,
            unsafe_allow_html=True,
        )

with tabs[2]:
    st.header("Skills")
    st.subheader("üìåTecnologias:")
    st.image("./cp01/skil.png", width=520)
    st.subheader("üìåFerramentas:")
    st.write("Streamlit, Tableau, Power BI")
    st.subheader("üìåSoft Skills:")
    st.write("Comunica√ß√£o, Trabalho em equipe, Resili√™ncia, Criatividade, Proatividade.")

with tabs[3]:
    st.header("An√°lise de Dados")
    st.subheader("1. Apresenta√ß√£o dos Dados")

    uploaded_file = st.file_uploader("Carregue sua base de dados (formato CSV)", type=["csv", "xlsx"])
    df = None
    
    if uploaded_file is not None:
        try:
                # Verifica o tipo do arquivo e o processa adequadamente
            if uploaded_file.name.endswith('.csv'):
                df = pd.read_csv(uploaded_file, encoding='latin1', delimiter=';')
            elif uploaded_file.name.endswith('.xlsx'):
                df = pd.read_excel(uploaded_file)

            # Mostra os dados carregados
            st.write("**Base de dados carregada pelo upload do usu√°rio:**")
            st.write(df.head())
        except Exception as e:
             st.error(f"Erro ao carregar os dados: {e}")
    else:
        st.warning("Nenhum arquivo foi carregado. Por favor, carregue um arquivo CSV ou XLSX.")

    if df is not None:
        
        st.write("""
        Este conjunto de dados foi retirado do Censo Escolar da Educa√ß√£o B√°sica 2023.
        Ele cont√©m informa√ß√µes sobre escolas, matr√≠culas, infraestrutura, turmas e docentes em todas as regi√µes do Brasil.
        Abaixo est√° uma amostra dos dados e a categoriza√ß√£o das vari√°veis:
        """)

        st.write("Amostra dos Dados:")
        st.write(df.head())

        st.markdown("""
        | **Vari√°vel**          | **Descri√ß√£o**                              | **Tipo**             |
        |-----------------------|--------------------------------------------|----------------------|
        | `NO_REGIAO`           | Nome da regi√£o                             | Qualitativa Nominal  |
        | `NO_UF`               | Nome do estado                             | Qualitativa Nominal  |
        | `TP_DEPENDENCIA`      | Depend√™ncia administrativa                 | Qualitativa Ordinal  |
        | `QT_SALAS_UTILIZADAS` | N√∫mero de salas utilizadas                 | Quantitativa Discreta|
        | `QT_MAT_BAS`          | N√∫mero de matr√≠culas                       | Quantitativa Discreta|
        | `IN_BANHEIRO`         | Presen√ßa de banheiros (Sim ou N√£o)         | Bin√°ria              |
        | `IN_AGUA_POTAVEL`     | Presen√ßa de √°gua pot√°vel (Sim ou N√£o)      | Bin√°ria              |
        """)

        st.write("**Perguntas de An√°lise:**")
        st.write("""
        1. Como est√£o distribu√≠das as escolas por regi√µes e estados?
        2. Qual a disponibilidade de infraestrutura b√°sica (banheiros e √°gua pot√°vel)?
        3. Qual a correla√ß√£o entre o n√∫mero de salas utilizadas e o n√∫mero de matr√≠culas?
        4. Como se comportam as distribui√ß√µes das vari√°veis chave?
        """)

        st.subheader("2. Medidas Centrais e An√°lise Inicial")
    
if df is not None:

    if {'QT_SALAS_UTILIZADAS', 'QT_MAT_BAS'}.issubset(df.columns):

        media = df['QT_MAT_BAS'].mean()
        mediana = df['QT_MAT_BAS'].median()
        moda = df['QT_MAT_BAS'].mode()[0]
        desvio_padrao = df['QT_MAT_BAS'].std()
        variancia = df['QT_MAT_BAS'].var()

        st.write("**Medidas Centrais:**")
        st.write(f"- M√©dia: {media:.2f}")
        st.write(f"- Mediana: {mediana:.2f}")
        st.write(f"- Moda: {moda:.2f}")
        st.write(f"- Desvio Padr√£o: {desvio_padrao:.2f}")
        st.write(f"- Vari√¢ncia: {variancia:.2f}")

        st.write("""
        As m√©tricas indicam uma varia√ß√£o significativa no n√∫mero de matr√≠culas entre escolas. A proximidade entre m√©dia e mediana
        sugere que os dados est√£o moderadamente equilibrados, mas o desvio padr√£o elevado indica a presen√ßa de outliers.
        """)
        st.write("**Correla√ß√£o entre Salas e Matr√≠culas:**")
        fig, ax = plt.subplots()
        ax.scatter(df['QT_SALAS_UTILIZADAS'], df['QT_MAT_BAS'], alpha=0.5, color='blue')
        ax.set_title("Correla√ß√£o entre Salas Utilizadas e Matr√≠culas")
        ax.set_xlabel("N√∫mero de Salas Utilizadas")
        ax.set_ylabel("N√∫mero de Matr√≠culas")
        st.pyplot(fig)

        st.write("""
        O gr√°fico demonstra uma correla√ß√£o positiva entre o n√∫mero de salas utilizadas e matr√≠culas nas escolas: mais salas tendem a significar mais alunos atendidos.
        A maior concentra√ß√£o de pontos est√° pr√≥xima √† origem, sugerindo que a maioria das escolas tem infraestrutura limitada. Contudo, h√° outliers, 
        indicando varia√ß√µes significativas. Conclui-se que escolas com melhor infraestrutura frequentemente suportam maior quantidade de matr√≠culas, 
        refor√ßando a import√¢ncia de investimentos nesse setor.
        """)
    st.subheader("Distribui√ß√£o de Matr√≠culas por Regi√£o")

if df is not None and {'QT_MAT_BAS', 'NO_REGIAO'}.issubset(df.columns):

    matriculas_por_regiao = df.groupby('NO_REGIAO')['QT_MAT_BAS'].sum()

    fig, ax = plt.subplots(figsize=(10, 6))
    matriculas_por_regiao.plot(kind='bar', color='#87CEFA', alpha=0.8, edgecolor='black', ax=ax)
    ax.set_title("Distribui√ß√£o de Matr√≠culas por Regi√£o", fontsize=16, fontweight='bold', color='darkblue')
    ax.set_xlabel("Regi√£o", fontsize=12)
    ax.set_ylabel("Quantidade de Matr√≠culas", fontsize=12)
    ax.grid(axis='y', linestyle='--', linewidth=0.5, color='lightgray')
    st.pyplot(fig)

    st.write("""
    Este gr√°fico apresenta a distribui√ß√£o total de matr√≠culas por regi√£o do Brasil. 
    Ele permite observar quais regi√µes possuem maior ou menor concentra√ß√£o de matr√≠culas, 
    fornecendo insights sobre a din√¢mica educacional no pa√≠s. Com o gr√°fico √© possivel concluir
    que a regi√£o centro-oeste √© a regi√£o com menos matr√≠culas e a regi√£o sudeste com maior deten√ß√£o
    de matriculas escolares.
    """)
else:
    st.warning("As colunas necess√°rias ('QT_MAT_BAS', 'NO_REGIAO') n√£o est√£o dispon√≠veis no conjunto de dados.")

st.subheader("Distribui√ß√£o Poisson: Matr√≠culas por Escola")

if 'QT_MAT_BAS' in df.columns:

    media_matriculas = df['QT_MAT_BAS'].mean()

 
    x = np.arange(0, int(media_matriculas) * 2) 
    y = poisson.pmf(x, media_matriculas)

    fig, ax = plt.subplots(figsize=(10, 6))
    ax.bar(x, y, color='#87CEEB', alpha=0.8, edgecolor='black')
    ax.set_title("Distribui√ß√£o Poisson: Matr√≠culas por Escola", fontsize=16, fontweight='bold')
    ax.set_xlabel("Quantidade de Matr√≠culas", fontsize=12)
    ax.set_ylabel("Probabilidade", fontsize=12)
    ax.grid(axis='y', linestyle='--', linewidth=0.5, color='lightgray')
    st.pyplot(fig)

    st.write(f"""
    **M√©dia de Matr√≠culas por Escola:** {media_matriculas:.2f}

    O gr√°fico apresenta a distribui√ß√£o Poisson das matr√≠culas por escola, com uma m√©dia de 265,05 matr√≠culas por escola, 
    representando o valor esperado e o par√¢metro $\lambda$. O eixo X mostra a quantidade de matr√≠culas, 
    enquanto o eixo Y indica a probabilidade associada. A distribui√ß√£o √© assim√©trica, com maior probabilidade para 
    valores pr√≥ximos √† m√©dia, diminuindo para n√∫meros muito altos ou baixos. Este modelo auxilia na an√°lise da frequ√™ncia 
    de escolas com diferentes tamanhos de matr√≠cula, destacando que a maioria est√° concentrada ao redor da m√©dia, mas h√° 
    varia√ß√µes extremas.
    """)
else:
    st.warning("A coluna 'QT_MAT_BAS' n√£o est√° dispon√≠vel no conjunto de dados.")
    
st.subheader("Distribui√ß√£o Normal: Matr√≠culas por Regi√£o")

if {'QT_MAT_BAS', 'NO_REGIAO'}.issubset(df.columns):
        matriculas_por_regiao = df.groupby('NO_REGIAO')['QT_MAT_BAS'].sum()
        media = matriculas_por_regiao.mean()
        desvio_padrao = matriculas_por_regiao.std()

        x = np.linspace(media - 4*desvio_padrao, media + 4*desvio_padrao, 500)
        y = norm.pdf(x, media, desvio_padrao)

        fig, ax = plt.subplots(figsize=(10, 6))
        ax.plot(x, y, color='blue', linewidth=2)
        ax.fill_between(x, y, color='lightblue', alpha=0.5)
        ax.axvline(media, color='red', linestyle='--', label='M√©dia')
        ax.set_title("Distribui√ß√£o Normal: Matr√≠culas por Regi√£o", fontsize=16)
        ax.set_xlabel("Quantidade de Matr√≠culas")
        ax.set_ylabel("Densidade de Probabilidade")
        st.pyplot(fig)

        st.write(f"**M√©dia:** {media:.2f} | **Desvio Padr√£o:** {desvio_padrao:.2f}")
        st.write("""
        O gr√°fico ilustra a distribui√ß√£o normal do n√∫mero de matr√≠culas por regi√£o, caracterizado por uma curva em forma 
        de sino, a qual representa a concentra√ß√£o de valores ao redor da m√©dia. A linha pontilhada vermelha central 
        indica a m√©dia de 9.460.926,40 matr√≠culas, refletindo que a maioria das regi√µes apresenta n√∫meros pr√≥ximos 
        a esse valor. O desvio padr√£o, calculado em 6.476.699,29, demonstra uma varia√ß√£o significativa, sugerindo 
        discrep√¢ncias expressivas no n√∫mero de matr√≠culas entre regi√µes. No eixo horizontal (X),
        observa-se a quantidade de matr√≠culas, enquanto o eixo vertical (Y) apresenta a densidade de probabilidade associada. 
        A √°rea sombreada sob a curva simboliza a totalidade dos dados, indicando a probabilidade de ocorr√™ncia de diferentes valores. 
        Por fim, a maior concentra√ß√£o de matr√≠culas ocorre ao redor da m√©dia, enquanto regi√µes extremas exibem valores at√≠picos, 
        evidenciados pelas caudas alongadas da curva.
        """)
        st.subheader("Distribui√ß√£o Binomial: Presen√ßa de Banheiros")

if 'IN_BANHEIRO' in df.columns:
        sucesso = df['IN_BANHEIRO'].value_counts().get(1, 0)
        total = len(df['IN_BANHEIRO'])
        probabilidade = sucesso / total

        n = 10  
        x = np.arange(0, n + 1)
        y = binom.pmf(x, n, probabilidade)

        fig, ax = plt.subplots(figsize=(8, 5))
        ax.bar(x, y, color='#3CB371', edgecolor='black', alpha=0.7)
        ax.set_title("Distribui√ß√£o Binomial: Banheiros Dispon√≠veis", fontsize=14)
        ax.set_xlabel("N√∫mero de Escolas")
        ax.set_ylabel("Probabilidade")
        st.pyplot(fig)

        st.write(f"**Probabilidade de uma escola ter banheiros:** {probabilidade:.2%}")
        st.write("""
        Esta an√°lise reflete as chances de diferentes quantidades de escolas (em um grupo de 10) apresentarem banheiros dispon√≠veis.
        """)





